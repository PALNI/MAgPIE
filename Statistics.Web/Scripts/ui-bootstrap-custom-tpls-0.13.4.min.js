/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/

 * Version: 0.13.4 - 2015-09-03
 * License: MIT
 */
angular.module("ui.bootstrap",["ui.bootstrap.tpls","ui.bootstrap.accordion","ui.bootstrap.collapse","ui.bootstrap.buttons"]),angular.module("ui.bootstrap.tpls",["template/accordion/accordion-group.html","template/accordion/accordion.html"]),angular.module("ui.bootstrap.accordion",["ui.bootstrap.collapse"]).constant("accordionConfig",{closeOthers:!0}).controller("AccordionController",["$scope","$attrs","accordionConfig",function(n,e,t){this.groups=[],this.closeOthers=function(o){var a=angular.isDefined(e.closeOthers)?n.$eval(e.closeOthers):t.closeOthers;a&&angular.forEach(this.groups,function(n){n!==o&&(n.isOpen=!1)})},this.addGroup=function(n){var e=this;this.groups.push(n),n.$on("$destroy",function(){e.removeGroup(n)})},this.removeGroup=function(n){var e=this.groups.indexOf(n);-1!==e&&this.groups.splice(e,1)}}]).directive("accordion",function(){return{restrict:"EA",controller:"AccordionController",controllerAs:"accordion",transclude:!0,replace:!1,templateUrl:function(n,e){return e.templateUrl||"template/accordion/accordion.html"}}}).directive("accordionGroup",function(){return{require:"^accordion",restrict:"EA",transclude:!0,replace:!0,templateUrl:function(n,e){return e.templateUrl||"template/accordion/accordion-group.html"},scope:{heading:"@",isOpen:"=?",isDisabled:"=?"},controller:function(){this.setHeading=function(n){this.heading=n}},link:function(n,e,t,o){o.addGroup(n),n.openClass=t.openClass||"panel-open",n.panelClass=t.panelClass,n.$watch("isOpen",function(t){e.toggleClass(n.openClass,t),t&&o.closeOthers(n)}),n.toggleOpen=function(e){n.isDisabled||e&&32!==e.which||(n.isOpen=!n.isOpen)}}}}).directive("accordionHeading",function(){return{restrict:"EA",transclude:!0,template:"",replace:!0,require:"^accordionGroup",link:function(n,e,t,o,a){o.setHeading(a(n,angular.noop))}}}).directive("accordionTransclude",function(){return{require:"^accordionGroup",link:function(n,e,t,o){n.$watch(function(){return o[t.accordionTransclude]},function(n){n&&(e.find("span").html(""),e.find("span").append(n))})}}}),angular.module("ui.bootstrap.collapse",[]).directive("collapse",["$animate",function(n){return{link:function(e,t,o){function a(){t.removeClass("collapse").addClass("collapsing").attr("aria-expanded",!0).attr("aria-hidden",!1),n.addClass(t,"in",{to:{height:t[0].scrollHeight+"px"}}).then(i)}function i(){t.removeClass("collapsing"),t.css({height:"auto"})}function l(){return t.hasClass("collapse")||t.hasClass("in")?(t.css({height:t[0].scrollHeight+"px"}).removeClass("collapse").addClass("collapsing").attr("aria-expanded",!1).attr("aria-hidden",!0),void n.removeClass(t,"in",{to:{height:"0"}}).then(r)):r()}function r(){t.css({height:"0"}),t.removeClass("collapsing"),t.addClass("collapse")}e.$watch(o.collapse,function(n){n?l():a()})}}}]),angular.module("ui.bootstrap.buttons",[]).constant("buttonConfig",{activeClass:"active",toggleEvent:"click"}).controller("ButtonsController",["buttonConfig",function(n){this.activeClass=n.activeClass||"active",this.toggleEvent=n.toggleEvent||"click"}]).directive("btnRadio",function(){return{require:["btnRadio","ngModel"],controller:"ButtonsController",controllerAs:"buttons",link:function(n,e,t,o){var a=o[0],i=o[1];e.find("input").css({display:"none"}),i.$render=function(){e.toggleClass(a.activeClass,angular.equals(i.$modelValue,n.$eval(t.btnRadio)))},e.bind(a.toggleEvent,function(){if(!t.disabled){var o=e.hasClass(a.activeClass);(!o||angular.isDefined(t.uncheckable))&&n.$apply(function(){i.$setViewValue(o?null:n.$eval(t.btnRadio)),i.$render()})}})}}}).directive("btnCheckbox",["$document",function(n){return{require:["btnCheckbox","ngModel"],controller:"ButtonsController",controllerAs:"button",link:function(e,t,o,a){function i(){return r(o.btnCheckboxTrue,!0)}function l(){return r(o.btnCheckboxFalse,!1)}function r(n,t){var o=e.$eval(n);return angular.isDefined(o)?o:t}var s=a[0],c=a[1];t.find("input").css({display:"none"}),c.$render=function(){t.toggleClass(s.activeClass,angular.equals(c.$modelValue,i()))},t.bind(s.toggleEvent,function(){o.disabled||e.$apply(function(){c.$setViewValue(t.hasClass(s.activeClass)?l():i()),c.$render()})}),t.on("keypress",function(a){o.disabled||32!==a.which||n[0].activeElement!==t[0]||e.$apply(function(){c.$setViewValue(t.hasClass(s.activeClass)?l():i()),c.$render()})})}}}]),angular.module("template/accordion/accordion-group.html",[]).run(["$templateCache",function(n){n.put("template/accordion/accordion-group.html",'<div class="panel {{panelClass || \'panel-default\'}}">\n  <div class="panel-heading" ng-keypress="toggleOpen($event)">\n    <h4 class="panel-title">\n      <a href tabindex="0" class="accordion-toggle" ng-click="toggleOpen()" accordion-transclude="heading"><span ng-class="{\'text-muted\': isDisabled}">{{heading}}</span></a>\n    </h4>\n  </div>\n  <div class="panel-collapse collapse" collapse="!isOpen">\n	  <div class="panel-body" ng-transclude></div>\n  </div>\n</div>\n')}]),angular.module("template/accordion/accordion.html",[]).run(["$templateCache",function(n){n.put("template/accordion/accordion.html",'<div class="panel-group" ng-transclude></div>')}]);