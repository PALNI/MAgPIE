#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZondervanLibrary.Statistics.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Statistics")]
	public partial class StatisticsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBibliographicRecord(BibliographicRecord instance);
    partial void UpdateBibliographicRecord(BibliographicRecord instance);
    partial void DeleteBibliographicRecord(BibliographicRecord instance);
    partial void InsertStatisticaRecord(StatisticaRecord instance);
    partial void UpdateStatisticaRecord(StatisticaRecord instance);
    partial void DeleteStatisticaRecord(StatisticaRecord instance);
    partial void InsertItemLocationDate(ItemLocationDate instance);
    partial void UpdateItemLocationDate(ItemLocationDate instance);
    partial void DeleteItemLocationDate(ItemLocationDate instance);
    partial void InsertItemLocation(ItemLocation instance);
    partial void UpdateItemLocation(ItemLocation instance);
    partial void DeleteItemLocation(ItemLocation instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertItemTransaction(ItemTransaction instance);
    partial void UpdateItemTransaction(ItemTransaction instance);
    partial void DeleteItemTransaction(ItemTransaction instance);
    partial void InsertResourceIdentifier(ResourceIdentifier instance);
    partial void UpdateResourceIdentifier(ResourceIdentifier instance);
    partial void DeleteResourceIdentifier(ResourceIdentifier instance);
    partial void InsertResourceRecordMetric(ResourceRecordMetric instance);
    partial void UpdateResourceRecordMetric(ResourceRecordMetric instance);
    partial void DeleteResourceRecordMetric(ResourceRecordMetric instance);
    partial void InsertResourceRecord(ResourceRecord instance);
    partial void UpdateResourceRecord(ResourceRecord instance);
    partial void DeleteResourceRecord(ResourceRecord instance);
    partial void InsertResource(Resource instance);
    partial void UpdateResource(Resource instance);
    partial void DeleteResource(Resource instance);
    partial void InsertEZProxyAudit(EZProxyAudit instance);
    partial void UpdateEZProxyAudit(EZProxyAudit instance);
    partial void DeleteEZProxyAudit(EZProxyAudit instance);
    partial void InsertPatronRecord(PatronRecord instance);
    partial void UpdatePatronRecord(PatronRecord instance);
    partial void DeletePatronRecord(PatronRecord instance);
    partial void InsertPatron(Patron instance);
    partial void UpdatePatron(Patron instance);
    partial void DeletePatron(Patron instance);
    partial void InsertStudentMajorRecord(StudentMajorRecord instance);
    partial void UpdateStudentMajorRecord(StudentMajorRecord instance);
    partial void DeleteStudentMajorRecord(StudentMajorRecord instance);
    partial void InsertStudentMajor(StudentMajor instance);
    partial void UpdateStudentMajor(StudentMajor instance);
    partial void DeleteStudentMajor(StudentMajor instance);
    partial void InsertStudentRecord(StudentRecord instance);
    partial void UpdateStudentRecord(StudentRecord instance);
    partial void DeleteStudentRecord(StudentRecord instance);
    partial void InsertStudentResidenceRecord(StudentResidenceRecord instance);
    partial void UpdateStudentResidenceRecord(StudentResidenceRecord instance);
    partial void DeleteStudentResidenceRecord(StudentResidenceRecord instance);
    partial void InsertStudentResidence(StudentResidence instance);
    partial void UpdateStudentResidence(StudentResidence instance);
    partial void DeleteStudentResidence(StudentResidence instance);
    #endregion
		
		public StatisticsDataContext() : 
				base(global::ZondervanLibrary.Statistics.Entities.Properties.Settings.Default.StatisticsConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public StatisticsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatisticsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatisticsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatisticsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BibliographicRecord> BibliographicRecords
		{
			get
			{
				return this.GetTable<BibliographicRecord>();
			}
		}
		
		public System.Data.Linq.Table<StatisticaRecord> StatisticaRecords
		{
			get
			{
				return this.GetTable<StatisticaRecord>();
			}
		}
		
		public System.Data.Linq.Table<InventoryAnomaly> InventoryAnomalies
		{
			get
			{
				return this.GetTable<InventoryAnomaly>();
			}
		}
		
		public System.Data.Linq.Table<ItemLocationDate> ItemLocationDates
		{
			get
			{
				return this.GetTable<ItemLocationDate>();
			}
		}
		
		public System.Data.Linq.Table<ItemLocation> ItemLocations
		{
			get
			{
				return this.GetTable<ItemLocation>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<ItemTransaction> ItemTransactions
		{
			get
			{
				return this.GetTable<ItemTransaction>();
			}
		}
		
		public System.Data.Linq.Table<TransactionAnomaly> TransactionAnomalies
		{
			get
			{
				return this.GetTable<TransactionAnomaly>();
			}
		}
		
		public System.Data.Linq.Table<ResourceIdentifier> ResourceIdentifiers
		{
			get
			{
				return this.GetTable<ResourceIdentifier>();
			}
		}
		
		public System.Data.Linq.Table<ResourceRecordMetric> ResourceRecordMetrics
		{
			get
			{
				return this.GetTable<ResourceRecordMetric>();
			}
		}
		
		public System.Data.Linq.Table<ResourceRecord> ResourceRecords
		{
			get
			{
				return this.GetTable<ResourceRecord>();
			}
		}
		
		public System.Data.Linq.Table<Resource> Resources
		{
			get
			{
				return this.GetTable<Resource>();
			}
		}
		
		public System.Data.Linq.Table<EZProxyAudit> EZProxyAudits
		{
			get
			{
				return this.GetTable<EZProxyAudit>();
			}
		}
		
		public System.Data.Linq.Table<EZProxyLog> EZProxyLogs
		{
			get
			{
				return this.GetTable<EZProxyLog>();
			}
		}
		
		public System.Data.Linq.Table<PatronRecord> PatronRecords
		{
			get
			{
				return this.GetTable<PatronRecord>();
			}
		}
		
		public System.Data.Linq.Table<Patron> Patrons
		{
			get
			{
				return this.GetTable<Patron>();
			}
		}
		
		public System.Data.Linq.Table<StudentMajorRecord> StudentMajorRecords
		{
			get
			{
				return this.GetTable<StudentMajorRecord>();
			}
		}
		
		public System.Data.Linq.Table<StudentMajor> StudentMajors
		{
			get
			{
				return this.GetTable<StudentMajor>();
			}
		}
		
		public System.Data.Linq.Table<StudentRecord> StudentRecords
		{
			get
			{
				return this.GetTable<StudentRecord>();
			}
		}
		
		public System.Data.Linq.Table<StudentResidenceRecord> StudentResidenceRecords
		{
			get
			{
				return this.GetTable<StudentResidenceRecord>();
			}
		}
		
		public System.Data.Linq.Table<StudentResidence> StudentResidences
		{
			get
			{
				return this.GetTable<StudentResidence>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Circulation.BibliographicRecords")]
	public partial class BibliographicRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BibliographicRecordID;
		
		private string _OclcNumber;
		
		private string _Title;
		
		private string _MaterialFormat;
		
		private string _Author;
		
		private System.DateTime _RunDate;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBibliographicRecordIDChanging(int value);
    partial void OnBibliographicRecordIDChanged();
    partial void OnOclcNumberChanging(string value);
    partial void OnOclcNumberChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMaterialFormatChanging(string value);
    partial void OnMaterialFormatChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnRunDateChanging(System.DateTime value);
    partial void OnRunDateChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public BibliographicRecord()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BibliographicRecordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BibliographicRecordID
		{
			get
			{
				return this._BibliographicRecordID;
			}
			set
			{
				if ((this._BibliographicRecordID != value))
				{
					this.OnBibliographicRecordIDChanging(value);
					this.SendPropertyChanging();
					this._BibliographicRecordID = value;
					this.SendPropertyChanged("BibliographicRecordID");
					this.OnBibliographicRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OclcNumber", DbType="NVarChar(16)")]
		public string OclcNumber
		{
			get
			{
				return this._OclcNumber;
			}
			set
			{
				if ((this._OclcNumber != value))
				{
					this.OnOclcNumberChanging(value);
					this.SendPropertyChanging();
					this._OclcNumber = value;
					this.SendPropertyChanged("OclcNumber");
					this.OnOclcNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialFormat", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string MaterialFormat
		{
			get
			{
				return this._MaterialFormat;
			}
			set
			{
				if ((this._MaterialFormat != value))
				{
					this.OnMaterialFormatChanging(value);
					this.SendPropertyChanging();
					this._MaterialFormat = value;
					this.SendPropertyChanged("MaterialFormat");
					this.OnMaterialFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(MAX)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunDate", DbType="Date NOT NULL")]
		public System.DateTime RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this.OnRunDateChanging(value);
					this.SendPropertyChanging();
					this._RunDate = value;
					this.SendPropertyChanged("RunDate");
					this.OnRunDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BibliographicRecord_Item", Storage="_Items", ThisKey="BibliographicRecordID", OtherKey="BibliographicRecordID")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.BibliographicRecord = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.BibliographicRecord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Statista.StatisticaRecords")]
	public partial class StatisticaRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _ID;
		
		private System.DateTime _Date;
		
		private string _ContentType;
		
		private string _MainIndustry;
		
		private string _Title;
		
		private string _TypeofAccess;
		
		private string _Content;
		
		private string _Subtype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnMainIndustryChanging(string value);
    partial void OnMainIndustryChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTypeofAccessChanging(string value);
    partial void OnTypeofAccessChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnSubtypeChanging(string value);
    partial void OnSubtypeChanged();
    #endregion
		
		public StatisticaRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime2 NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(30)")]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainIndustry", DbType="NVarChar(50)")]
		public string MainIndustry
		{
			get
			{
				return this._MainIndustry;
			}
			set
			{
				if ((this._MainIndustry != value))
				{
					this.OnMainIndustryChanging(value);
					this.SendPropertyChanging();
					this._MainIndustry = value;
					this.SendPropertyChanged("MainIndustry");
					this.OnMainIndustryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeofAccess", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TypeofAccess
		{
			get
			{
				return this._TypeofAccess;
			}
			set
			{
				if ((this._TypeofAccess != value))
				{
					this.OnTypeofAccessChanging(value);
					this.SendPropertyChanging();
					this._TypeofAccess = value;
					this.SendPropertyChanged("TypeofAccess");
					this.OnTypeofAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(30)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtype", DbType="NVarChar(50)")]
		public string Subtype
		{
			get
			{
				return this._Subtype;
			}
			set
			{
				if ((this._Subtype != value))
				{
					this.OnSubtypeChanging(value);
					this.SendPropertyChanging();
					this._Subtype = value;
					this.SendPropertyChanged("Subtype");
					this.OnSubtypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Circulation.InventoryAnomalies")]
	public partial class InventoryAnomaly
	{
		
		private string _OclcNumber;
		
		private string _Title;
		
		private string _MaterialFormat;
		
		private string _Author;
		
		private string _Barcode;
		
		private string _Cost;
		
		private System.Nullable<System.DateTime> _LastInventoriedDate;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private string _ItemType;
		
		private string _CallNumber;
		
		private string _ShelvingLocation;
		
		private string _CurrentStatus;
		
		private string _Description;
		
		private System.DateTime _RunDate;
		
		private int _CountFound;
		
		public InventoryAnomaly()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OclcNumber", DbType="NVarChar(16)")]
		public string OclcNumber
		{
			get
			{
				return this._OclcNumber;
			}
			set
			{
				if ((this._OclcNumber != value))
				{
					this._OclcNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialFormat", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string MaterialFormat
		{
			get
			{
				return this._MaterialFormat;
			}
			set
			{
				if ((this._MaterialFormat != value))
				{
					this._MaterialFormat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(MAX)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this._Author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(32)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this._Barcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="NVarChar(16)")]
		public string Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastInventoriedDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastInventoriedDate
		{
			get
			{
				return this._LastInventoriedDate;
			}
			set
			{
				if ((this._LastInventoriedDate != value))
				{
					this._LastInventoriedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this._DeletedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string ItemType
		{
			get
			{
				return this._ItemType;
			}
			set
			{
				if ((this._ItemType != value))
				{
					this._ItemType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallNumber", DbType="NVarChar(64)")]
		public string CallNumber
		{
			get
			{
				return this._CallNumber;
			}
			set
			{
				if ((this._CallNumber != value))
				{
					this._CallNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelvingLocation", DbType="NVarChar(32)")]
		public string ShelvingLocation
		{
			get
			{
				return this._ShelvingLocation;
			}
			set
			{
				if ((this._ShelvingLocation != value))
				{
					this._ShelvingLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentStatus", DbType="NVarChar(16)")]
		public string CurrentStatus
		{
			get
			{
				return this._CurrentStatus;
			}
			set
			{
				if ((this._CurrentStatus != value))
				{
					this._CurrentStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunDate", DbType="Date NOT NULL")]
		public System.DateTime RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this._RunDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountFound", DbType="Int NOT NULL")]
		public int CountFound
		{
			get
			{
				return this._CountFound;
			}
			set
			{
				if ((this._CountFound != value))
				{
					this._CountFound = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Circulation.ItemLocationDates")]
	public partial class ItemLocationDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemLocationID;
		
		private System.DateTime _RunDate;
		
		private EntityRef<ItemLocation> _ItemLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemLocationIDChanging(int value);
    partial void OnItemLocationIDChanged();
    partial void OnRunDateChanging(System.DateTime value);
    partial void OnRunDateChanged();
    #endregion
		
		public ItemLocationDate()
		{
			this._ItemLocation = default(EntityRef<ItemLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLocationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ItemLocationID
		{
			get
			{
				return this._ItemLocationID;
			}
			set
			{
				if ((this._ItemLocationID != value))
				{
					if (this._ItemLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemLocationIDChanging(value);
					this.SendPropertyChanging();
					this._ItemLocationID = value;
					this.SendPropertyChanged("ItemLocationID");
					this.OnItemLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this.OnRunDateChanging(value);
					this.SendPropertyChanging();
					this._RunDate = value;
					this.SendPropertyChanged("RunDate");
					this.OnRunDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemLocation_ItemLocationDate", Storage="_ItemLocation", ThisKey="ItemLocationID", OtherKey="ItemLocationID", IsForeignKey=true)]
		public ItemLocation ItemLocation
		{
			get
			{
				return this._ItemLocation.Entity;
			}
			set
			{
				ItemLocation previousValue = this._ItemLocation.Entity;
				if (((previousValue != value) 
							|| (this._ItemLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemLocation.Entity = null;
						previousValue.ItemLocationDates.Remove(this);
					}
					this._ItemLocation.Entity = value;
					if ((value != null))
					{
						value.ItemLocationDates.Add(this);
						this._ItemLocationID = value.ItemLocationID;
					}
					else
					{
						this._ItemLocationID = default(int);
					}
					this.SendPropertyChanged("ItemLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Circulation.ItemLocations")]
	public partial class ItemLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemLocationID;
		
		private int _ItemID;
		
		private string _CallNumber;
		
		private string _ShelvingLocation;
		
		private string _CurrentStatus;
		
		private string _Description;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<ItemLocationDate> _ItemLocationDates;
		
		private EntitySet<ItemTransaction> _ItemTransactions;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemLocationIDChanging(int value);
    partial void OnItemLocationIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnCallNumberChanging(string value);
    partial void OnCallNumberChanged();
    partial void OnShelvingLocationChanging(string value);
    partial void OnShelvingLocationChanged();
    partial void OnCurrentStatusChanging(string value);
    partial void OnCurrentStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ItemLocation()
		{
			this._ItemLocationDates = new EntitySet<ItemLocationDate>(new Action<ItemLocationDate>(this.attach_ItemLocationDates), new Action<ItemLocationDate>(this.detach_ItemLocationDates));
			this._ItemTransactions = new EntitySet<ItemTransaction>(new Action<ItemTransaction>(this.attach_ItemTransactions), new Action<ItemTransaction>(this.detach_ItemTransactions));
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemLocationID
		{
			get
			{
				return this._ItemLocationID;
			}
			set
			{
				if ((this._ItemLocationID != value))
				{
					this.OnItemLocationIDChanging(value);
					this.SendPropertyChanging();
					this._ItemLocationID = value;
					this.SendPropertyChanged("ItemLocationID");
					this.OnItemLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallNumber", DbType="NVarChar(64)")]
		public string CallNumber
		{
			get
			{
				return this._CallNumber;
			}
			set
			{
				if ((this._CallNumber != value))
				{
					this.OnCallNumberChanging(value);
					this.SendPropertyChanging();
					this._CallNumber = value;
					this.SendPropertyChanged("CallNumber");
					this.OnCallNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelvingLocation", DbType="NVarChar(64)")]
		public string ShelvingLocation
		{
			get
			{
				return this._ShelvingLocation;
			}
			set
			{
				if ((this._ShelvingLocation != value))
				{
					this.OnShelvingLocationChanging(value);
					this.SendPropertyChanging();
					this._ShelvingLocation = value;
					this.SendPropertyChanged("ShelvingLocation");
					this.OnShelvingLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentStatus", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string CurrentStatus
		{
			get
			{
				return this._CurrentStatus;
			}
			set
			{
				if ((this._CurrentStatus != value))
				{
					this.OnCurrentStatusChanging(value);
					this.SendPropertyChanging();
					this._CurrentStatus = value;
					this.SendPropertyChanged("CurrentStatus");
					this.OnCurrentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemLocation_ItemLocationDate", Storage="_ItemLocationDates", ThisKey="ItemLocationID", OtherKey="ItemLocationID")]
		public EntitySet<ItemLocationDate> ItemLocationDates
		{
			get
			{
				return this._ItemLocationDates;
			}
			set
			{
				this._ItemLocationDates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemLocation_ItemTransaction", Storage="_ItemTransactions", ThisKey="ItemLocationID", OtherKey="ItemLocationID")]
		public EntitySet<ItemTransaction> ItemTransactions
		{
			get
			{
				return this._ItemTransactions;
			}
			set
			{
				this._ItemTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemLocation", Storage="_Item", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.ItemLocations.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.ItemLocations.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemLocationDates(ItemLocationDate entity)
		{
			this.SendPropertyChanging();
			entity.ItemLocation = this;
		}
		
		private void detach_ItemLocationDates(ItemLocationDate entity)
		{
			this.SendPropertyChanging();
			entity.ItemLocation = null;
		}
		
		private void attach_ItemTransactions(ItemTransaction entity)
		{
			this.SendPropertyChanging();
			entity.ItemLocation = this;
		}
		
		private void detach_ItemTransactions(ItemTransaction entity)
		{
			this.SendPropertyChanging();
			entity.ItemLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Circulation.Items")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _BibliographicRecordID;
		
		private string _Barcode;
		
		private string _Cost;
		
		private System.Nullable<System.DateTime> _LastInventoriedDate;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private string _ItemType;
		
		private System.DateTime _RunDate;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<ItemLocation> _ItemLocations;
		
		private EntityRef<BibliographicRecord> _BibliographicRecord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnBibliographicRecordIDChanging(int value);
    partial void OnBibliographicRecordIDChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnCostChanging(string value);
    partial void OnCostChanged();
    partial void OnLastInventoriedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastInventoriedDateChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    partial void OnItemTypeChanging(string value);
    partial void OnItemTypeChanged();
    partial void OnRunDateChanging(System.DateTime value);
    partial void OnRunDateChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Item()
		{
			this._ItemLocations = new EntitySet<ItemLocation>(new Action<ItemLocation>(this.attach_ItemLocations), new Action<ItemLocation>(this.detach_ItemLocations));
			this._BibliographicRecord = default(EntityRef<BibliographicRecord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BibliographicRecordID", DbType="Int NOT NULL")]
		public int BibliographicRecordID
		{
			get
			{
				return this._BibliographicRecordID;
			}
			set
			{
				if ((this._BibliographicRecordID != value))
				{
					if (this._BibliographicRecord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBibliographicRecordIDChanging(value);
					this.SendPropertyChanging();
					this._BibliographicRecordID = value;
					this.SendPropertyChanged("BibliographicRecordID");
					this.OnBibliographicRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="NVarChar(MAX)")]
		public string Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastInventoriedDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastInventoriedDate
		{
			get
			{
				return this._LastInventoriedDate;
			}
			set
			{
				if ((this._LastInventoriedDate != value))
				{
					this.OnLastInventoriedDateChanging(value);
					this.SendPropertyChanging();
					this._LastInventoriedDate = value;
					this.SendPropertyChanged("LastInventoriedDate");
					this.OnLastInventoriedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string ItemType
		{
			get
			{
				return this._ItemType;
			}
			set
			{
				if ((this._ItemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._ItemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunDate", DbType="Date NOT NULL")]
		public System.DateTime RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this.OnRunDateChanging(value);
					this.SendPropertyChanging();
					this._RunDate = value;
					this.SendPropertyChanged("RunDate");
					this.OnRunDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemLocation", Storage="_ItemLocations", ThisKey="ItemID", OtherKey="ItemID")]
		public EntitySet<ItemLocation> ItemLocations
		{
			get
			{
				return this._ItemLocations;
			}
			set
			{
				this._ItemLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BibliographicRecord_Item", Storage="_BibliographicRecord", ThisKey="BibliographicRecordID", OtherKey="BibliographicRecordID", IsForeignKey=true)]
		public BibliographicRecord BibliographicRecord
		{
			get
			{
				return this._BibliographicRecord.Entity;
			}
			set
			{
				BibliographicRecord previousValue = this._BibliographicRecord.Entity;
				if (((previousValue != value) 
							|| (this._BibliographicRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BibliographicRecord.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._BibliographicRecord.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._BibliographicRecordID = value.BibliographicRecordID;
					}
					else
					{
						this._BibliographicRecordID = default(int);
					}
					this.SendPropertyChanged("BibliographicRecord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemLocations(ItemLocation entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ItemLocations(ItemLocation entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Circulation.ItemTransactions")]
	public partial class ItemTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemTransactionID;
		
		private string _ItemBarcode;
		
		private System.Nullable<int> _PatronDemographicID;
		
		private System.Nullable<int> _ItemLocationID;
		
		private string _TransactionType;
		
		private string _UserBarcode;
		
		private System.DateTime _LoanDueDate;
		
		private System.DateTime _LoanCheckedOutDate;
		
		private string _InstitutionName;
		
		private System.DateTime _RunDate;
		
		private System.DateTime _RecordDate;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<ItemLocation> _ItemLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemTransactionIDChanging(int value);
    partial void OnItemTransactionIDChanged();
    partial void OnItemBarcodeChanging(string value);
    partial void OnItemBarcodeChanged();
    partial void OnPatronDemographicIDChanging(System.Nullable<int> value);
    partial void OnPatronDemographicIDChanged();
    partial void OnItemLocationIDChanging(System.Nullable<int> value);
    partial void OnItemLocationIDChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    partial void OnUserBarcodeChanging(string value);
    partial void OnUserBarcodeChanged();
    partial void OnLoanDueDateChanging(System.DateTime value);
    partial void OnLoanDueDateChanged();
    partial void OnLoanCheckedOutDateChanging(System.DateTime value);
    partial void OnLoanCheckedOutDateChanged();
    partial void OnInstitutionNameChanging(string value);
    partial void OnInstitutionNameChanged();
    partial void OnRunDateChanging(System.DateTime value);
    partial void OnRunDateChanged();
    partial void OnRecordDateChanging(System.DateTime value);
    partial void OnRecordDateChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ItemTransaction()
		{
			this._ItemLocation = default(EntityRef<ItemLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemTransactionID
		{
			get
			{
				return this._ItemTransactionID;
			}
			set
			{
				if ((this._ItemTransactionID != value))
				{
					this.OnItemTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionID = value;
					this.SendPropertyChanged("ItemTransactionID");
					this.OnItemTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemBarcode", DbType="NVarChar(128)")]
		public string ItemBarcode
		{
			get
			{
				return this._ItemBarcode;
			}
			set
			{
				if ((this._ItemBarcode != value))
				{
					this.OnItemBarcodeChanging(value);
					this.SendPropertyChanging();
					this._ItemBarcode = value;
					this.SendPropertyChanged("ItemBarcode");
					this.OnItemBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronDemographicID", DbType="Int")]
		public System.Nullable<int> PatronDemographicID
		{
			get
			{
				return this._PatronDemographicID;
			}
			set
			{
				if ((this._PatronDemographicID != value))
				{
					this.OnPatronDemographicIDChanging(value);
					this.SendPropertyChanging();
					this._PatronDemographicID = value;
					this.SendPropertyChanged("PatronDemographicID");
					this.OnPatronDemographicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLocationID", DbType="Int")]
		public System.Nullable<int> ItemLocationID
		{
			get
			{
				return this._ItemLocationID;
			}
			set
			{
				if ((this._ItemLocationID != value))
				{
					if (this._ItemLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemLocationIDChanging(value);
					this.SendPropertyChanging();
					this._ItemLocationID = value;
					this.SendPropertyChanged("ItemLocationID");
					this.OnItemLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserBarcode", DbType="NVarChar(16)")]
		public string UserBarcode
		{
			get
			{
				return this._UserBarcode;
			}
			set
			{
				if ((this._UserBarcode != value))
				{
					this.OnUserBarcodeChanging(value);
					this.SendPropertyChanging();
					this._UserBarcode = value;
					this.SendPropertyChanged("UserBarcode");
					this.OnUserBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDueDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime LoanDueDate
		{
			get
			{
				return this._LoanDueDate;
			}
			set
			{
				if ((this._LoanDueDate != value))
				{
					this.OnLoanDueDateChanging(value);
					this.SendPropertyChanging();
					this._LoanDueDate = value;
					this.SendPropertyChanged("LoanDueDate");
					this.OnLoanDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanCheckedOutDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime LoanCheckedOutDate
		{
			get
			{
				return this._LoanCheckedOutDate;
			}
			set
			{
				if ((this._LoanCheckedOutDate != value))
				{
					this.OnLoanCheckedOutDateChanging(value);
					this.SendPropertyChanging();
					this._LoanCheckedOutDate = value;
					this.SendPropertyChanged("LoanCheckedOutDate");
					this.OnLoanCheckedOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InstitutionName
		{
			get
			{
				return this._InstitutionName;
			}
			set
			{
				if ((this._InstitutionName != value))
				{
					this.OnInstitutionNameChanging(value);
					this.SendPropertyChanging();
					this._InstitutionName = value;
					this.SendPropertyChanged("InstitutionName");
					this.OnInstitutionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunDate", DbType="Date NOT NULL")]
		public System.DateTime RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this.OnRunDateChanging(value);
					this.SendPropertyChanging();
					this._RunDate = value;
					this.SendPropertyChanged("RunDate");
					this.OnRunDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordDate", DbType="Date NOT NULL")]
		public System.DateTime RecordDate
		{
			get
			{
				return this._RecordDate;
			}
			set
			{
				if ((this._RecordDate != value))
				{
					this.OnRecordDateChanging(value);
					this.SendPropertyChanging();
					this._RecordDate = value;
					this.SendPropertyChanged("RecordDate");
					this.OnRecordDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemLocation_ItemTransaction", Storage="_ItemLocation", ThisKey="ItemLocationID", OtherKey="ItemLocationID", IsForeignKey=true)]
		public ItemLocation ItemLocation
		{
			get
			{
				return this._ItemLocation.Entity;
			}
			set
			{
				ItemLocation previousValue = this._ItemLocation.Entity;
				if (((previousValue != value) 
							|| (this._ItemLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemLocation.Entity = null;
						previousValue.ItemTransactions.Remove(this);
					}
					this._ItemLocation.Entity = value;
					if ((value != null))
					{
						value.ItemTransactions.Add(this);
						this._ItemLocationID = value.ItemLocationID;
					}
					else
					{
						this._ItemLocationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ItemLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Circulation.TransactionAnomalies")]
	public partial class TransactionAnomaly
	{
		
		private string _ItemBarcode;
		
		private string _UserBarcode;
		
		private System.Nullable<System.DateTime> _LoanDueDate;
		
		private System.Nullable<System.DateTime> _LoanCheckedOutDate;
		
		private System.DateTime _RecordDate;
		
		private string _TransactionType;
		
		private string _InstitutionName;
		
		private short _CountFound;
		
		private System.DateTime _RunDate;
		
		public TransactionAnomaly()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemBarcode", DbType="NVarChar(16)")]
		public string ItemBarcode
		{
			get
			{
				return this._ItemBarcode;
			}
			set
			{
				if ((this._ItemBarcode != value))
				{
					this._ItemBarcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserBarcode", DbType="NVarChar(16)")]
		public string UserBarcode
		{
			get
			{
				return this._UserBarcode;
			}
			set
			{
				if ((this._UserBarcode != value))
				{
					this._UserBarcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDueDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LoanDueDate
		{
			get
			{
				return this._LoanDueDate;
			}
			set
			{
				if ((this._LoanDueDate != value))
				{
					this._LoanDueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanCheckedOutDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LoanCheckedOutDate
		{
			get
			{
				return this._LoanCheckedOutDate;
			}
			set
			{
				if ((this._LoanCheckedOutDate != value))
				{
					this._LoanCheckedOutDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordDate", DbType="Date NOT NULL")]
		public System.DateTime RecordDate
		{
			get
			{
				return this._RecordDate;
			}
			set
			{
				if ((this._RecordDate != value))
				{
					this._RecordDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this._TransactionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string InstitutionName
		{
			get
			{
				return this._InstitutionName;
			}
			set
			{
				if ((this._InstitutionName != value))
				{
					this._InstitutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountFound", DbType="SmallInt NOT NULL")]
		public short CountFound
		{
			get
			{
				return this._CountFound;
			}
			set
			{
				if ((this._CountFound != value))
				{
					this._CountFound = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunDate", DbType="Date NOT NULL")]
		public System.DateTime RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this._RunDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Digital.ResourceIdentifiers")]
	public partial class ResourceIdentifier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceId;
		
		private string _IdentifierType;
		
		private string _IdentifierValue;
		
		private string _ResourceType;
		
		private System.DateTime _CreationDate;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIdChanging(int value);
    partial void OnResourceIdChanged();
    partial void OnIdentifierTypeChanging(string value);
    partial void OnIdentifierTypeChanged();
    partial void OnIdentifierValueChanging(string value);
    partial void OnIdentifierValueChanged();
    partial void OnResourceTypeChanging(string value);
    partial void OnResourceTypeChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public ResourceIdentifier()
		{
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifierType", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdentifierType
		{
			get
			{
				return this._IdentifierType;
			}
			set
			{
				if ((this._IdentifierType != value))
				{
					this.OnIdentifierTypeChanging(value);
					this.SendPropertyChanging();
					this._IdentifierType = value;
					this.SendPropertyChanged("IdentifierType");
					this.OnIdentifierTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifierValue", DbType="NVarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdentifierValue
		{
			get
			{
				return this._IdentifierValue;
			}
			set
			{
				if ((this._IdentifierValue != value))
				{
					this.OnIdentifierValueChanging(value);
					this.SendPropertyChanging();
					this._IdentifierValue = value;
					this.SendPropertyChanged("IdentifierValue");
					this.OnIdentifierValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceType", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ResourceType
		{
			get
			{
				return this._ResourceType;
			}
			set
			{
				if ((this._ResourceType != value))
				{
					this.OnResourceTypeChanging(value);
					this.SendPropertyChanging();
					this._ResourceType = value;
					this.SendPropertyChanged("ResourceType");
					this.OnResourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceIdentifier", Storage="_Resource", ThisKey="ResourceId", OtherKey="ResourceId", IsForeignKey=true)]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceIdentifiers.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceIdentifiers.Add(this);
						this._ResourceId = value.ResourceId;
					}
					else
					{
						this._ResourceId = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Digital.ResourceRecordMetrics")]
	public partial class ResourceRecordMetric : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ResourceRecordId;
		
		private string _MetricType;
		
		private int _MetricValue;
		
		private EntityRef<ResourceRecord> _ResourceRecord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceRecordIdChanging(long value);
    partial void OnResourceRecordIdChanged();
    partial void OnMetricTypeChanging(string value);
    partial void OnMetricTypeChanged();
    partial void OnMetricValueChanging(int value);
    partial void OnMetricValueChanged();
    #endregion
		
		public ResourceRecordMetric()
		{
			this._ResourceRecord = default(EntityRef<ResourceRecord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceRecordId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ResourceRecordId
		{
			get
			{
				return this._ResourceRecordId;
			}
			set
			{
				if ((this._ResourceRecordId != value))
				{
					if (this._ResourceRecord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceRecordIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceRecordId = value;
					this.SendPropertyChanged("ResourceRecordId");
					this.OnResourceRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetricType", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MetricType
		{
			get
			{
				return this._MetricType;
			}
			set
			{
				if ((this._MetricType != value))
				{
					this.OnMetricTypeChanging(value);
					this.SendPropertyChanging();
					this._MetricType = value;
					this.SendPropertyChanged("MetricType");
					this.OnMetricTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetricValue", DbType="Int NOT NULL")]
		public int MetricValue
		{
			get
			{
				return this._MetricValue;
			}
			set
			{
				if ((this._MetricValue != value))
				{
					this.OnMetricValueChanging(value);
					this.SendPropertyChanging();
					this._MetricValue = value;
					this.SendPropertyChanged("MetricValue");
					this.OnMetricValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceRecord_ResourceRecordMetric", Storage="_ResourceRecord", ThisKey="ResourceRecordId", OtherKey="ResourceRecordId", IsForeignKey=true)]
		public ResourceRecord ResourceRecord
		{
			get
			{
				return this._ResourceRecord.Entity;
			}
			set
			{
				ResourceRecord previousValue = this._ResourceRecord.Entity;
				if (((previousValue != value) 
							|| (this._ResourceRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceRecord.Entity = null;
						previousValue.ResourceRecordMetrics.Remove(this);
					}
					this._ResourceRecord.Entity = value;
					if ((value != null))
					{
						value.ResourceRecordMetrics.Add(this);
						this._ResourceRecordId = value.ResourceRecordId;
					}
					else
					{
						this._ResourceRecordId = default(long);
					}
					this.SendPropertyChanged("ResourceRecord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Digital.ResourceRecords")]
	public partial class ResourceRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ResourceRecordId;
		
		private System.Nullable<long> _ParentResourceRecordId;
		
		private int _ResourceId;
		
		private System.DateTime _RunDate;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<ResourceRecordMetric> _ResourceRecordMetrics;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceRecordIdChanging(long value);
    partial void OnResourceRecordIdChanged();
    partial void OnParentResourceRecordIdChanging(System.Nullable<long> value);
    partial void OnParentResourceRecordIdChanged();
    partial void OnResourceIdChanging(int value);
    partial void OnResourceIdChanged();
    partial void OnRunDateChanging(System.DateTime value);
    partial void OnRunDateChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ResourceRecord()
		{
			this._ResourceRecordMetrics = new EntitySet<ResourceRecordMetric>(new Action<ResourceRecordMetric>(this.attach_ResourceRecordMetrics), new Action<ResourceRecordMetric>(this.detach_ResourceRecordMetrics));
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceRecordId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ResourceRecordId
		{
			get
			{
				return this._ResourceRecordId;
			}
			set
			{
				if ((this._ResourceRecordId != value))
				{
					this.OnResourceRecordIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceRecordId = value;
					this.SendPropertyChanged("ResourceRecordId");
					this.OnResourceRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentResourceRecordId", DbType="BigInt")]
		public System.Nullable<long> ParentResourceRecordId
		{
			get
			{
				return this._ParentResourceRecordId;
			}
			set
			{
				if ((this._ParentResourceRecordId != value))
				{
					this.OnParentResourceRecordIdChanging(value);
					this.SendPropertyChanging();
					this._ParentResourceRecordId = value;
					this.SendPropertyChanged("ParentResourceRecordId");
					this.OnParentResourceRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="Int NOT NULL")]
		public int ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunDate", DbType="Date NOT NULL")]
		public System.DateTime RunDate
		{
			get
			{
				return this._RunDate;
			}
			set
			{
				if ((this._RunDate != value))
				{
					this.OnRunDateChanging(value);
					this.SendPropertyChanging();
					this._RunDate = value;
					this.SendPropertyChanged("RunDate");
					this.OnRunDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceRecord_ResourceRecordMetric", Storage="_ResourceRecordMetrics", ThisKey="ResourceRecordId", OtherKey="ResourceRecordId")]
		public EntitySet<ResourceRecordMetric> ResourceRecordMetrics
		{
			get
			{
				return this._ResourceRecordMetrics;
			}
			set
			{
				this._ResourceRecordMetrics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceRecord", Storage="_Resource", ThisKey="ResourceId", OtherKey="ResourceId", IsForeignKey=true)]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceRecords.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceRecords.Add(this);
						this._ResourceId = value.ResourceId;
					}
					else
					{
						this._ResourceId = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResourceRecordMetrics(ResourceRecordMetric entity)
		{
			this.SendPropertyChanging();
			entity.ResourceRecord = this;
		}
		
		private void detach_ResourceRecordMetrics(ResourceRecordMetric entity)
		{
			this.SendPropertyChanging();
			entity.ResourceRecord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Digital.Resources")]
	public partial class Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceId;
		
		private string _ResourceName;
		
		private string _ResourceType;
		
		private string _ResourcePlatform;
		
		private System.DateTime _CreationDate;
		
		private EntitySet<ResourceIdentifier> _ResourceIdentifiers;
		
		private EntitySet<ResourceRecord> _ResourceRecords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIdChanging(int value);
    partial void OnResourceIdChanged();
    partial void OnResourceNameChanging(string value);
    partial void OnResourceNameChanged();
    partial void OnResourceTypeChanging(string value);
    partial void OnResourceTypeChanged();
    partial void OnResourcePlatformChanging(string value);
    partial void OnResourcePlatformChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public Resource()
		{
			this._ResourceIdentifiers = new EntitySet<ResourceIdentifier>(new Action<ResourceIdentifier>(this.attach_ResourceIdentifiers), new Action<ResourceIdentifier>(this.detach_ResourceIdentifiers));
			this._ResourceRecords = new EntitySet<ResourceRecord>(new Action<ResourceRecord>(this.attach_ResourceRecords), new Action<ResourceRecord>(this.detach_ResourceRecords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ResourceName
		{
			get
			{
				return this._ResourceName;
			}
			set
			{
				if ((this._ResourceName != value))
				{
					this.OnResourceNameChanging(value);
					this.SendPropertyChanging();
					this._ResourceName = value;
					this.SendPropertyChanged("ResourceName");
					this.OnResourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceType", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string ResourceType
		{
			get
			{
				return this._ResourceType;
			}
			set
			{
				if ((this._ResourceType != value))
				{
					this.OnResourceTypeChanging(value);
					this.SendPropertyChanging();
					this._ResourceType = value;
					this.SendPropertyChanged("ResourceType");
					this.OnResourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourcePlatform", DbType="NVarChar(MAX)")]
		public string ResourcePlatform
		{
			get
			{
				return this._ResourcePlatform;
			}
			set
			{
				if ((this._ResourcePlatform != value))
				{
					this.OnResourcePlatformChanging(value);
					this.SendPropertyChanging();
					this._ResourcePlatform = value;
					this.SendPropertyChanged("ResourcePlatform");
					this.OnResourcePlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceIdentifier", Storage="_ResourceIdentifiers", ThisKey="ResourceId", OtherKey="ResourceId")]
		public EntitySet<ResourceIdentifier> ResourceIdentifiers
		{
			get
			{
				return this._ResourceIdentifiers;
			}
			set
			{
				this._ResourceIdentifiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceRecord", Storage="_ResourceRecords", ThisKey="ResourceId", OtherKey="ResourceId")]
		public EntitySet<ResourceRecord> ResourceRecords
		{
			get
			{
				return this._ResourceRecords;
			}
			set
			{
				this._ResourceRecords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResourceIdentifiers(ResourceIdentifier entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceIdentifiers(ResourceIdentifier entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_ResourceRecords(ResourceRecord entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceRecords(ResourceRecord entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EZProxy.EZProxyAudit")]
	public partial class EZProxyAudit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DateTime;
		
		private string _Event;
		
		private string _IP;
		
		private string _Username;
		
		private string _Session;
		
		private string _Other;
		
		private int _LineNumber;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnEventChanging(string value);
    partial void OnEventChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSessionChanging(string value);
    partial void OnSessionChanged();
    partial void OnOtherChanging(string value);
    partial void OnOtherChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public EZProxyAudit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Event
		{
			get
			{
				return this._Event;
			}
			set
			{
				if ((this._Event != value))
				{
					this.OnEventChanging(value);
					this.SendPropertyChanging();
					this._Event = value;
					this.SendPropertyChanged("Event");
					this.OnEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Session", DbType="NVarChar(50)")]
		public string Session
		{
			get
			{
				return this._Session;
			}
			set
			{
				if ((this._Session != value))
				{
					this.OnSessionChanging(value);
					this.SendPropertyChanging();
					this._Session = value;
					this.SendPropertyChanged("Session");
					this.OnSessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="NVarChar(300)")]
		public string Other
		{
			get
			{
				return this._Other;
			}
			set
			{
				if ((this._Other != value))
				{
					this.OnOtherChanging(value);
					this.SendPropertyChanging();
					this._Other = value;
					this.SendPropertyChanged("Other");
					this.OnOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="EZProxy.EZProxyLog")]
	public partial class EZProxyLog
	{
		
		private string _IP;
		
		private string _Username;
		
		private System.DateTime _DateTime;
		
		private string _Request;
		
		private int _HTTPCode;
		
		private int _BytesTransferred;
		
		private string _Referer;
		
		private string _UserAgent;
		
		public EZProxyLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this._IP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NChar(15)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Request", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Request
		{
			get
			{
				return this._Request;
			}
			set
			{
				if ((this._Request != value))
				{
					this._Request = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTTPCode", DbType="Int NOT NULL")]
		public int HTTPCode
		{
			get
			{
				return this._HTTPCode;
			}
			set
			{
				if ((this._HTTPCode != value))
				{
					this._HTTPCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesTransferred", DbType="Int NOT NULL")]
		public int BytesTransferred
		{
			get
			{
				return this._BytesTransferred;
			}
			set
			{
				if ((this._BytesTransferred != value))
				{
					this._BytesTransferred = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referer", DbType="NVarChar(MAX)")]
		public string Referer
		{
			get
			{
				return this._Referer;
			}
			set
			{
				if ((this._Referer != value))
				{
					this._Referer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="NVarChar(MAX)")]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this._UserAgent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Patron.PatronRecords")]
	public partial class PatronRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PatronRecordId;
		
		private int _PatronId;
		
		private System.DateTime _EffectiveStartDate;
		
		private System.DateTime _EffectiveEndDate;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<StudentRecord> _StudentRecords;
		
		private EntityRef<Patron> _Patron;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatronRecordIdChanging(int value);
    partial void OnPatronRecordIdChanged();
    partial void OnPatronIdChanging(int value);
    partial void OnPatronIdChanged();
    partial void OnEffectiveStartDateChanging(System.DateTime value);
    partial void OnEffectiveStartDateChanged();
    partial void OnEffectiveEndDateChanging(System.DateTime value);
    partial void OnEffectiveEndDateChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PatronRecord()
		{
			this._StudentRecords = new EntitySet<StudentRecord>(new Action<StudentRecord>(this.attach_StudentRecords), new Action<StudentRecord>(this.detach_StudentRecords));
			this._Patron = default(EntityRef<Patron>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronRecordId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PatronRecordId
		{
			get
			{
				return this._PatronRecordId;
			}
			set
			{
				if ((this._PatronRecordId != value))
				{
					this.OnPatronRecordIdChanging(value);
					this.SendPropertyChanging();
					this._PatronRecordId = value;
					this.SendPropertyChanged("PatronRecordId");
					this.OnPatronRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronId", DbType="Int NOT NULL")]
		public int PatronId
		{
			get
			{
				return this._PatronId;
			}
			set
			{
				if ((this._PatronId != value))
				{
					if (this._Patron.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatronIdChanging(value);
					this.SendPropertyChanging();
					this._PatronId = value;
					this.SendPropertyChanged("PatronId");
					this.OnPatronIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveStartDate", DbType="Date NOT NULL")]
		public System.DateTime EffectiveStartDate
		{
			get
			{
				return this._EffectiveStartDate;
			}
			set
			{
				if ((this._EffectiveStartDate != value))
				{
					this.OnEffectiveStartDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveStartDate = value;
					this.SendPropertyChanged("EffectiveStartDate");
					this.OnEffectiveStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveEndDate", DbType="Date NOT NULL")]
		public System.DateTime EffectiveEndDate
		{
			get
			{
				return this._EffectiveEndDate;
			}
			set
			{
				if ((this._EffectiveEndDate != value))
				{
					this.OnEffectiveEndDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveEndDate = value;
					this.SendPropertyChanged("EffectiveEndDate");
					this.OnEffectiveEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatronRecord_StudentRecord", Storage="_StudentRecords", ThisKey="PatronRecordId", OtherKey="PatronRecordId")]
		public EntitySet<StudentRecord> StudentRecords
		{
			get
			{
				return this._StudentRecords;
			}
			set
			{
				this._StudentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patron_PatronRecord", Storage="_Patron", ThisKey="PatronId", OtherKey="PatronId", IsForeignKey=true)]
		public Patron Patron
		{
			get
			{
				return this._Patron.Entity;
			}
			set
			{
				Patron previousValue = this._Patron.Entity;
				if (((previousValue != value) 
							|| (this._Patron.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patron.Entity = null;
						previousValue.PatronRecords.Remove(this);
					}
					this._Patron.Entity = value;
					if ((value != null))
					{
						value.PatronRecords.Add(this);
						this._PatronId = value.PatronId;
					}
					else
					{
						this._PatronId = default(int);
					}
					this.SendPropertyChanged("Patron");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentRecords(StudentRecord entity)
		{
			this.SendPropertyChanging();
			entity.PatronRecord = this;
		}
		
		private void detach_StudentRecords(StudentRecord entity)
		{
			this.SendPropertyChanging();
			entity.PatronRecord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Patron.Patrons")]
	public partial class Patron : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PatronId;
		
		private string _Barcode;
		
		private string _Gender;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<PatronRecord> _PatronRecords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatronIdChanging(int value);
    partial void OnPatronIdChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Patron()
		{
			this._PatronRecords = new EntitySet<PatronRecord>(new Action<PatronRecord>(this.attach_PatronRecords), new Action<PatronRecord>(this.detach_PatronRecords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PatronId
		{
			get
			{
				return this._PatronId;
			}
			set
			{
				if ((this._PatronId != value))
				{
					this.OnPatronIdChanging(value);
					this.SendPropertyChanging();
					this._PatronId = value;
					this.SendPropertyChanged("PatronId");
					this.OnPatronIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Char(14) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patron_PatronRecord", Storage="_PatronRecords", ThisKey="PatronId", OtherKey="PatronId")]
		public EntitySet<PatronRecord> PatronRecords
		{
			get
			{
				return this._PatronRecords;
			}
			set
			{
				this._PatronRecords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatronRecords(PatronRecord entity)
		{
			this.SendPropertyChanging();
			entity.Patron = this;
		}
		
		private void detach_PatronRecords(PatronRecord entity)
		{
			this.SendPropertyChanging();
			entity.Patron = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Patron.StudentMajorRecords")]
	public partial class StudentMajorRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentRecordId;
		
		private string _MajorType;
		
		private int _StudentMajorId;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<StudentMajor> _StudentMajor;
		
		private EntityRef<StudentRecord> _StudentRecord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentRecordIdChanging(int value);
    partial void OnStudentRecordIdChanged();
    partial void OnMajorTypeChanging(string value);
    partial void OnMajorTypeChanged();
    partial void OnStudentMajorIdChanging(int value);
    partial void OnStudentMajorIdChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public StudentMajorRecord()
		{
			this._StudentMajor = default(EntityRef<StudentMajor>);
			this._StudentRecord = default(EntityRef<StudentRecord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentRecordId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StudentRecordId
		{
			get
			{
				return this._StudentRecordId;
			}
			set
			{
				if ((this._StudentRecordId != value))
				{
					if (this._StudentRecord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentRecordIdChanging(value);
					this.SendPropertyChanging();
					this._StudentRecordId = value;
					this.SendPropertyChanged("StudentRecordId");
					this.OnStudentRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorType", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MajorType
		{
			get
			{
				return this._MajorType;
			}
			set
			{
				if ((this._MajorType != value))
				{
					this.OnMajorTypeChanging(value);
					this.SendPropertyChanging();
					this._MajorType = value;
					this.SendPropertyChanged("MajorType");
					this.OnMajorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentMajorId", DbType="Int NOT NULL")]
		public int StudentMajorId
		{
			get
			{
				return this._StudentMajorId;
			}
			set
			{
				if ((this._StudentMajorId != value))
				{
					if (this._StudentMajor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentMajorIdChanging(value);
					this.SendPropertyChanging();
					this._StudentMajorId = value;
					this.SendPropertyChanged("StudentMajorId");
					this.OnStudentMajorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentMajor_StudentMajorRecord", Storage="_StudentMajor", ThisKey="StudentMajorId", OtherKey="StudentMajorId", IsForeignKey=true)]
		public StudentMajor StudentMajor
		{
			get
			{
				return this._StudentMajor.Entity;
			}
			set
			{
				StudentMajor previousValue = this._StudentMajor.Entity;
				if (((previousValue != value) 
							|| (this._StudentMajor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentMajor.Entity = null;
						previousValue.StudentMajorRecords.Remove(this);
					}
					this._StudentMajor.Entity = value;
					if ((value != null))
					{
						value.StudentMajorRecords.Add(this);
						this._StudentMajorId = value.StudentMajorId;
					}
					else
					{
						this._StudentMajorId = default(int);
					}
					this.SendPropertyChanged("StudentMajor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentRecord_StudentMajorRecord", Storage="_StudentRecord", ThisKey="StudentRecordId", OtherKey="StudentRecordId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StudentRecord StudentRecord
		{
			get
			{
				return this._StudentRecord.Entity;
			}
			set
			{
				StudentRecord previousValue = this._StudentRecord.Entity;
				if (((previousValue != value) 
							|| (this._StudentRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentRecord.Entity = null;
						previousValue.StudentMajorRecords.Remove(this);
					}
					this._StudentRecord.Entity = value;
					if ((value != null))
					{
						value.StudentMajorRecords.Add(this);
						this._StudentRecordId = value.StudentRecordId;
					}
					else
					{
						this._StudentRecordId = default(int);
					}
					this.SendPropertyChanged("StudentRecord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Patron.StudentMajors")]
	public partial class StudentMajor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentMajorId;
		
		private string _MajorName;
		
		private string _MajorCode;
		
		private bool _IsSystems;
		
		private bool _IsEducation;
		
		private bool _IsGraduate;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<StudentMajorRecord> _StudentMajorRecords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentMajorIdChanging(int value);
    partial void OnStudentMajorIdChanged();
    partial void OnMajorNameChanging(string value);
    partial void OnMajorNameChanged();
    partial void OnMajorCodeChanging(string value);
    partial void OnMajorCodeChanged();
    partial void OnIsSystemsChanging(bool value);
    partial void OnIsSystemsChanged();
    partial void OnIsEducationChanging(bool value);
    partial void OnIsEducationChanged();
    partial void OnIsGraduateChanging(bool value);
    partial void OnIsGraduateChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public StudentMajor()
		{
			this._StudentMajorRecords = new EntitySet<StudentMajorRecord>(new Action<StudentMajorRecord>(this.attach_StudentMajorRecords), new Action<StudentMajorRecord>(this.detach_StudentMajorRecords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentMajorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentMajorId
		{
			get
			{
				return this._StudentMajorId;
			}
			set
			{
				if ((this._StudentMajorId != value))
				{
					this.OnStudentMajorIdChanging(value);
					this.SendPropertyChanging();
					this._StudentMajorId = value;
					this.SendPropertyChanged("StudentMajorId");
					this.OnStudentMajorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string MajorName
		{
			get
			{
				return this._MajorName;
			}
			set
			{
				if ((this._MajorName != value))
				{
					this.OnMajorNameChanging(value);
					this.SendPropertyChanging();
					this._MajorName = value;
					this.SendPropertyChanged("MajorName");
					this.OnMajorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorCode", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MajorCode
		{
			get
			{
				return this._MajorCode;
			}
			set
			{
				if ((this._MajorCode != value))
				{
					this.OnMajorCodeChanging(value);
					this.SendPropertyChanging();
					this._MajorCode = value;
					this.SendPropertyChanged("MajorCode");
					this.OnMajorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystems", DbType="Bit NOT NULL")]
		public bool IsSystems
		{
			get
			{
				return this._IsSystems;
			}
			set
			{
				if ((this._IsSystems != value))
				{
					this.OnIsSystemsChanging(value);
					this.SendPropertyChanging();
					this._IsSystems = value;
					this.SendPropertyChanged("IsSystems");
					this.OnIsSystemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEducation", DbType="Bit NOT NULL")]
		public bool IsEducation
		{
			get
			{
				return this._IsEducation;
			}
			set
			{
				if ((this._IsEducation != value))
				{
					this.OnIsEducationChanging(value);
					this.SendPropertyChanging();
					this._IsEducation = value;
					this.SendPropertyChanged("IsEducation");
					this.OnIsEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGraduate", DbType="Bit NOT NULL")]
		public bool IsGraduate
		{
			get
			{
				return this._IsGraduate;
			}
			set
			{
				if ((this._IsGraduate != value))
				{
					this.OnIsGraduateChanging(value);
					this.SendPropertyChanging();
					this._IsGraduate = value;
					this.SendPropertyChanged("IsGraduate");
					this.OnIsGraduateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentMajor_StudentMajorRecord", Storage="_StudentMajorRecords", ThisKey="StudentMajorId", OtherKey="StudentMajorId")]
		public EntitySet<StudentMajorRecord> StudentMajorRecords
		{
			get
			{
				return this._StudentMajorRecords;
			}
			set
			{
				this._StudentMajorRecords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentMajorRecords(StudentMajorRecord entity)
		{
			this.SendPropertyChanging();
			entity.StudentMajor = this;
		}
		
		private void detach_StudentMajorRecords(StudentMajorRecord entity)
		{
			this.SendPropertyChanging();
			entity.StudentMajor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Patron.StudentRecords")]
	public partial class StudentRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentRecordId;
		
		private int _PatronRecordId;
		
		private string _StudentLevel;
		
		private string _StudentType;
		
		private string _StudentClass;
		
		private System.Nullable<decimal> _CumulativeGpa;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<StudentMajorRecord> _StudentMajorRecords;
		
		private EntityRef<StudentResidenceRecord> _StudentResidenceRecord;
		
		private EntityRef<PatronRecord> _PatronRecord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentRecordIdChanging(int value);
    partial void OnStudentRecordIdChanged();
    partial void OnPatronRecordIdChanging(int value);
    partial void OnPatronRecordIdChanged();
    partial void OnStudentLevelChanging(string value);
    partial void OnStudentLevelChanged();
    partial void OnStudentTypeChanging(string value);
    partial void OnStudentTypeChanged();
    partial void OnStudentClassChanging(string value);
    partial void OnStudentClassChanged();
    partial void OnCumulativeGpaChanging(System.Nullable<decimal> value);
    partial void OnCumulativeGpaChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public StudentRecord()
		{
			this._StudentMajorRecords = new EntitySet<StudentMajorRecord>(new Action<StudentMajorRecord>(this.attach_StudentMajorRecords), new Action<StudentMajorRecord>(this.detach_StudentMajorRecords));
			this._StudentResidenceRecord = default(EntityRef<StudentResidenceRecord>);
			this._PatronRecord = default(EntityRef<PatronRecord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentRecordId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StudentRecordId
		{
			get
			{
				return this._StudentRecordId;
			}
			set
			{
				if ((this._StudentRecordId != value))
				{
					this.OnStudentRecordIdChanging(value);
					this.SendPropertyChanging();
					this._StudentRecordId = value;
					this.SendPropertyChanged("StudentRecordId");
					this.OnStudentRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronRecordId", DbType="Int NOT NULL")]
		public int PatronRecordId
		{
			get
			{
				return this._PatronRecordId;
			}
			set
			{
				if ((this._PatronRecordId != value))
				{
					if (this._PatronRecord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatronRecordIdChanging(value);
					this.SendPropertyChanging();
					this._PatronRecordId = value;
					this.SendPropertyChanged("PatronRecordId");
					this.OnPatronRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentLevel", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string StudentLevel
		{
			get
			{
				return this._StudentLevel;
			}
			set
			{
				if ((this._StudentLevel != value))
				{
					this.OnStudentLevelChanging(value);
					this.SendPropertyChanging();
					this._StudentLevel = value;
					this.SendPropertyChanged("StudentLevel");
					this.OnStudentLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentType", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string StudentType
		{
			get
			{
				return this._StudentType;
			}
			set
			{
				if ((this._StudentType != value))
				{
					this.OnStudentTypeChanging(value);
					this.SendPropertyChanging();
					this._StudentType = value;
					this.SendPropertyChanged("StudentType");
					this.OnStudentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentClass", DbType="VarChar(16)")]
		public string StudentClass
		{
			get
			{
				return this._StudentClass;
			}
			set
			{
				if ((this._StudentClass != value))
				{
					this.OnStudentClassChanging(value);
					this.SendPropertyChanging();
					this._StudentClass = value;
					this.SendPropertyChanged("StudentClass");
					this.OnStudentClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CumulativeGpa", DbType="Decimal(3,2)")]
		public System.Nullable<decimal> CumulativeGpa
		{
			get
			{
				return this._CumulativeGpa;
			}
			set
			{
				if ((this._CumulativeGpa != value))
				{
					this.OnCumulativeGpaChanging(value);
					this.SendPropertyChanging();
					this._CumulativeGpa = value;
					this.SendPropertyChanged("CumulativeGpa");
					this.OnCumulativeGpaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentRecord_StudentMajorRecord", Storage="_StudentMajorRecords", ThisKey="StudentRecordId", OtherKey="StudentRecordId")]
		public EntitySet<StudentMajorRecord> StudentMajorRecords
		{
			get
			{
				return this._StudentMajorRecords;
			}
			set
			{
				this._StudentMajorRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentRecord_StudentResidenceRecord", Storage="_StudentResidenceRecord", ThisKey="StudentRecordId", OtherKey="StudentRecordId", IsUnique=true, IsForeignKey=false)]
		public StudentResidenceRecord StudentResidenceRecord
		{
			get
			{
				return this._StudentResidenceRecord.Entity;
			}
			set
			{
				StudentResidenceRecord previousValue = this._StudentResidenceRecord.Entity;
				if (((previousValue != value) 
							|| (this._StudentResidenceRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentResidenceRecord.Entity = null;
						previousValue.StudentRecord = null;
					}
					this._StudentResidenceRecord.Entity = value;
					if ((value != null))
					{
						value.StudentRecord = this;
					}
					this.SendPropertyChanged("StudentResidenceRecord");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatronRecord_StudentRecord", Storage="_PatronRecord", ThisKey="PatronRecordId", OtherKey="PatronRecordId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PatronRecord PatronRecord
		{
			get
			{
				return this._PatronRecord.Entity;
			}
			set
			{
				PatronRecord previousValue = this._PatronRecord.Entity;
				if (((previousValue != value) 
							|| (this._PatronRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatronRecord.Entity = null;
						previousValue.StudentRecords.Remove(this);
					}
					this._PatronRecord.Entity = value;
					if ((value != null))
					{
						value.StudentRecords.Add(this);
						this._PatronRecordId = value.PatronRecordId;
					}
					else
					{
						this._PatronRecordId = default(int);
					}
					this.SendPropertyChanged("PatronRecord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentMajorRecords(StudentMajorRecord entity)
		{
			this.SendPropertyChanging();
			entity.StudentRecord = this;
		}
		
		private void detach_StudentMajorRecords(StudentMajorRecord entity)
		{
			this.SendPropertyChanging();
			entity.StudentRecord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Patron.StudentResidenceRecords")]
	public partial class StudentResidenceRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentRecordId;
		
		private int _StudentResidenceId;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<StudentRecord> _StudentRecord;
		
		private EntityRef<StudentResidence> _StudentResidence;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentRecordIdChanging(int value);
    partial void OnStudentRecordIdChanged();
    partial void OnStudentResidenceIdChanging(int value);
    partial void OnStudentResidenceIdChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public StudentResidenceRecord()
		{
			this._StudentRecord = default(EntityRef<StudentRecord>);
			this._StudentResidence = default(EntityRef<StudentResidence>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentRecordId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StudentRecordId
		{
			get
			{
				return this._StudentRecordId;
			}
			set
			{
				if ((this._StudentRecordId != value))
				{
					if (this._StudentRecord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentRecordIdChanging(value);
					this.SendPropertyChanging();
					this._StudentRecordId = value;
					this.SendPropertyChanged("StudentRecordId");
					this.OnStudentRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentResidenceId", DbType="Int NOT NULL")]
		public int StudentResidenceId
		{
			get
			{
				return this._StudentResidenceId;
			}
			set
			{
				if ((this._StudentResidenceId != value))
				{
					if (this._StudentResidence.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentResidenceIdChanging(value);
					this.SendPropertyChanging();
					this._StudentResidenceId = value;
					this.SendPropertyChanged("StudentResidenceId");
					this.OnStudentResidenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentRecord_StudentResidenceRecord", Storage="_StudentRecord", ThisKey="StudentRecordId", OtherKey="StudentRecordId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StudentRecord StudentRecord
		{
			get
			{
				return this._StudentRecord.Entity;
			}
			set
			{
				StudentRecord previousValue = this._StudentRecord.Entity;
				if (((previousValue != value) 
							|| (this._StudentRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentRecord.Entity = null;
						previousValue.StudentResidenceRecord = null;
					}
					this._StudentRecord.Entity = value;
					if ((value != null))
					{
						value.StudentResidenceRecord = this;
						this._StudentRecordId = value.StudentRecordId;
					}
					else
					{
						this._StudentRecordId = default(int);
					}
					this.SendPropertyChanged("StudentRecord");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentResidence_StudentResidenceRecord", Storage="_StudentResidence", ThisKey="StudentResidenceId", OtherKey="StudentResidenceId", IsForeignKey=true)]
		public StudentResidence StudentResidence
		{
			get
			{
				return this._StudentResidence.Entity;
			}
			set
			{
				StudentResidence previousValue = this._StudentResidence.Entity;
				if (((previousValue != value) 
							|| (this._StudentResidence.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentResidence.Entity = null;
						previousValue.StudentResidenceRecords.Remove(this);
					}
					this._StudentResidence.Entity = value;
					if ((value != null))
					{
						value.StudentResidenceRecords.Add(this);
						this._StudentResidenceId = value.StudentResidenceId;
					}
					else
					{
						this._StudentResidenceId = default(int);
					}
					this.SendPropertyChanged("StudentResidence");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Patron.StudentResidences")]
	public partial class StudentResidence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentResidenceId;
		
		private string _ResidenceName;
		
		private string _ResidenceCategory;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<StudentResidenceRecord> _StudentResidenceRecords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentResidenceIdChanging(int value);
    partial void OnStudentResidenceIdChanged();
    partial void OnResidenceNameChanging(string value);
    partial void OnResidenceNameChanged();
    partial void OnResidenceCategoryChanging(string value);
    partial void OnResidenceCategoryChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public StudentResidence()
		{
			this._StudentResidenceRecords = new EntitySet<StudentResidenceRecord>(new Action<StudentResidenceRecord>(this.attach_StudentResidenceRecords), new Action<StudentResidenceRecord>(this.detach_StudentResidenceRecords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentResidenceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentResidenceId
		{
			get
			{
				return this._StudentResidenceId;
			}
			set
			{
				if ((this._StudentResidenceId != value))
				{
					this.OnStudentResidenceIdChanging(value);
					this.SendPropertyChanging();
					this._StudentResidenceId = value;
					this.SendPropertyChanged("StudentResidenceId");
					this.OnStudentResidenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidenceName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string ResidenceName
		{
			get
			{
				return this._ResidenceName;
			}
			set
			{
				if ((this._ResidenceName != value))
				{
					this.OnResidenceNameChanging(value);
					this.SendPropertyChanging();
					this._ResidenceName = value;
					this.SendPropertyChanged("ResidenceName");
					this.OnResidenceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidenceCategory", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string ResidenceCategory
		{
			get
			{
				return this._ResidenceCategory;
			}
			set
			{
				if ((this._ResidenceCategory != value))
				{
					this.OnResidenceCategoryChanging(value);
					this.SendPropertyChanging();
					this._ResidenceCategory = value;
					this.SendPropertyChanged("ResidenceCategory");
					this.OnResidenceCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentResidence_StudentResidenceRecord", Storage="_StudentResidenceRecords", ThisKey="StudentResidenceId", OtherKey="StudentResidenceId")]
		public EntitySet<StudentResidenceRecord> StudentResidenceRecords
		{
			get
			{
				return this._StudentResidenceRecords;
			}
			set
			{
				this._StudentResidenceRecords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentResidenceRecords(StudentResidenceRecord entity)
		{
			this.SendPropertyChanging();
			entity.StudentResidence = this;
		}
		
		private void detach_StudentResidenceRecords(StudentResidenceRecord entity)
		{
			this.SendPropertyChanging();
			entity.StudentResidence = null;
		}
	}
}
#pragma warning restore 1591
